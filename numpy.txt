# import numpy as np

# # Build array
# numpy_1d = np.array([1, 2, 3])

# # 1D dimensions
# np.ndim(numpy_1d)

# # Shape > 1D dimensions
# np.shape(numpy_1d)

# # direct access
# numpy_1d[0]

# # 2d
# numpy_2d = np.array([[4, 5, 6], [7, 8, 9]])

# # number of dimensions (2d = 2)
# np.ndim(numpy_2d)

# # Slice portion
# # First row - position 1,2
# numpy_2d[1, 1:3]

# # Return all values with conditon
# # returns 1D array with all entries that met requirement
# numpy_2d[numpy_2d >= 6]

# # Reverse rows and columns
# numpy_2d.reshape(3, 2)

# # Build 1D array start, end, steps
# np.arange(3, 10, 3) -> [3,6,9]

# # Evenly spaced start, end, number of entries
# np.linspace(3, 15, 5)
# # 5 points from 3 to 15 evenly spaced

# # array of 3 zeroes
# np.zeros(3)

# # 2d array of ones
# np.ones((3, 3))

# # 2d random numbers
# randC = np.random.random_sample((2,3))

# # min and max
# [randC.min(), randC.max()]

# # add and subtract
# print('+.', np.add(npx, npy))
# print('-.', np.subtract(npx, npy))

# # multiply and divide
# print('*.', np.multiply(npx, npy))
# print('/.', np.divide(npx, npy))